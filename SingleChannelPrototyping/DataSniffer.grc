options:
  parameters:
    author: artur
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: DataSniffer
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: centre_freq
  id: variable
  parameters:
    comment: ''
    value: 863.042e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 23]
    rotation: 0
    state: enabled
- name: divider
  id: variable
  parameters:
    comment: ''
    value: '10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1053, 52]
    rotation: 0
    state: true
- name: length
  id: variable
  parameters:
    comment: ''
    value: '9'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [948, 8]
    rotation: 0
    state: enabled
- name: mask
  id: variable
  parameters:
    comment: ''
    value: '0x110'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [661, 11]
    rotation: 0
    state: enabled
- name: points
  id: variable
  parameters:
    comment: ''
    value: '21000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 15]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '2000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [220, 13]
    rotation: 0
    state: enabled
- name: seed
  id: variable
  parameters:
    comment: ''
    value: '0x00'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [853, 13]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: samp_rate // 200000
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [763, 11]
    rotation: 0
    state: enabled
- name: analog_quadrature_demod_cf_0
  id: analog_quadrature_demod_cf
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gain: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [908, 416]
    rotation: 180
    state: true
- name: analog_simple_squelch_cc_0
  id: analog_simple_squelch_cc
  parameters:
    affinity: ''
    alias: ''
    alpha: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '-37'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [943, 215]
    rotation: 0
    state: true
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: C:\Users\artur\OneDrive\Desktop\Workspace\6tschDataSniffer\Files\CapturedPackets\testtest.raw
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 233]
    rotation: 0
    state: true
- name: blocks_head_0
  id: blocks_head
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '2000000'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 192]
    rotation: 0
    state: true
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '5'
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [652, 388]
    rotation: 180
    state: true
- name: blocks_skiphead_0
  id: blocks_skiphead
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '2500000'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [527, 160]
    rotation: 0
    state: true
- name: digital_binary_slicer_fb_0
  id: digital_binary_slicer_fb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [343, 578]
    rotation: 0
    state: true
- name: digital_clock_recovery_mm_xx_0
  id: digital_clock_recovery_mm_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gain_mu: '0.175'
    gain_omega: 0.25*0.175*0.175
    maxoutbuf: '0'
    minoutbuf: '0'
    mu: '0.5'
    omega: '40.2'
    omega_relative_limit: '0.005'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [349, 380]
    rotation: 180
    state: true
- name: digital_correlate_access_code_bb_0
  id: digital_correlate_access_code_bb
  parameters:
    access_code: '1001000001001110'
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [592, 551]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport datetime\n\n\
      class blk(gr.sync_block): \n\n    def __init__(self, path='C:/Users/artur/OneDrive/Desktop/foo.txt',\
      \ channel='channel'):  \n\n        gr.sync_block.__init__(\n            self,\n\
      \            name='Packet parser',   \n            in_sig=[np.byte],\n     \
      \       out_sig=[]\n        )\n        \n        self.path = path\n        self.channel\
      \ = channel\n        \n    def work(self, input_items, output_items):\n    \
      \    \n        file = open(self.path, 'a')\n        \n        for i in range(len(input_items[0])):\n\
      \        \n            if input_items[0][i] == 2:\n            \n          \
      \      file.write(str(datetime.datetime.now()))\n                input_items[0][i]\
      \ = 0\n   \n                length, currentPacketNumber, testId, totalPacketCount,\
      \ payloadDataLength = self.decodePacketPayload(input_items[0][i:i+8], input_items[0][i+8:i+24],\
      \ input_items[0][i+24:i+56], input_items[0][i+56:i+72], input_items[0][i+72:i+88])\n\
      \                file.write(\"{: >20} {: >20} {: >20} {: >20} {: >20} {: >20}\\\
      n\".format(self.channel, length, currentPacketNumber, testId, totalPacketCount,\
      \ payloadDataLength))\n                \n            if input_items[0][i] ==\
      \ 3:\n                \n                file.write(str(datetime.datetime.now()))\n\
      \                input_items[0][i] = 1\n                \n                length,\
      \ currentPacketNumber, testId, totalPacketCount, payloadDataLength = self.decodePacketPayload(input_items[0][i:i+8],\
      \ input_items[0][i+8:i+24], input_items[0][i+24:i+56], input_items[0][i+56:i+72],\
      \ input_items[0][i+72:i+88])\n                file.write(\"{: >20} {: >20} {:\
      \ >20} {: >20} {: >20} {: >20}\\n\".format(self.channel, length, currentPacketNumber,\
      \ testId, totalPacketCount, payloadDataLength))\n    \n        file.close()\n\
      \        return 0\n        \n    def decodePacketPayload(self, lengthBits, currentPacketNumberBits,\
      \ testIdBits, totalPacketCountBits, payloadDataLengthBits):\n    \n        array\
      \ = np.array(lengthBits)\n        array = np.packbits(array, bitorder='big')\n\
      \        array.dtype = np.uint8\n        \n        length = array[0]\n     \
      \   \n        array = np.array(currentPacketNumberBits)\n        array = np.packbits(array,\
      \ bitorder='big')\n        array.dtype = np.uint16\n        \n        currentPacketNumber\
      \ = array[0]\n        \n        array = np.array(testIdBits)\n        array\
      \ = np.packbits(array, bitorder='big')\n        array.dtype = np.uint32\n  \
      \      \n        testId = array[0]\n        \n        array = np.array(totalPacketCountBits)\n\
      \        array = np.packbits(array, bitorder='big')\n        array.dtype = np.uint16\n\
      \        \n        totalPacketCount = array[0]\n        \n        array = np.array(payloadDataLengthBits)\n\
      \        array = np.packbits(array, bitorder='big')\n        array.dtype = np.uint16\n\
      \        \n        payloadDataLength = array[0]\n    \n        return length,\
      \ currentPacketNumber, testId, totalPacketCount, payloadDataLength\n       \
      \ \n        \n    def inputBitsToString(self, array):\n        resultString\
      \ = \"\"\n        \n        for digit in array:\n            resultString +=\
      \ str(digit)\n\n        return resultString"
    affinity: ''
    alias: ''
    channel: '''ch0'''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    path: '''C:/Users/artur/OneDrive/Desktop/foo.txt'''
  states:
    _io_cache: ('Packet parser', 'blk', [('path', "'C:/Users/artur/OneDrive/Desktop/foo.txt'"),
      ('channel', "'channel'")], [('0', 'byte', 1)], [], '', ['channel', 'path'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [966, 541]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '2000000'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [906, 302]
    rotation: 0
    state: true

connections:
- [analog_quadrature_demod_cf_0, '0', blocks_moving_average_xx_0, '0']
- [analog_quadrature_demod_cf_0, '0', qtgui_time_sink_x_0, '0']
- [analog_simple_squelch_cc_0, '0', analog_quadrature_demod_cf_0, '0']
- [blocks_file_source_0, '0', blocks_skiphead_0, '0']
- [blocks_head_0, '0', analog_simple_squelch_cc_0, '0']
- [blocks_moving_average_xx_0, '0', digital_clock_recovery_mm_xx_0, '0']
- [blocks_skiphead_0, '0', blocks_head_0, '0']
- [digital_binary_slicer_fb_0, '0', digital_correlate_access_code_bb_0, '0']
- [digital_clock_recovery_mm_xx_0, '0', digital_binary_slicer_fb_0, '0']
- [digital_correlate_access_code_bb_0, '0', epy_block_0, '0']

metadata:
  file_format: 1
